package listeners;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;

import model.states.EditState;
import view.MainView;

import javax.swing.JFileChooser;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;

/**
 * MenubarButtonActionListener je klasa koja sluzi kao listener za akcije koje se
 * pokrecu izborom opcija iz menija u aplikaciji.
 * 
 * @author G4
 */

public class MenubarButtonActionListener implements ActionListener {

	
	/**
	 * Obrada akcije pokrenute izborom opcije iz menija.
	 * Na osnovu {@link ActionEvent#getActionCommand()} bira se odgovarajuca operacija.
	 * 
	 * @param e dogadjaj koji sadrzi informacije o izabranoj opciji
	 */
	@Override
	public void actionPerformed(ActionEvent e) {
		JPopupMenu menuItem = (JPopupMenu) ((JMenuItem) e.getSource()).getParent();
		MainView window = (MainView) SwingUtilities
				.getWindowAncestor((JMenuBar) ((JMenuItem) menuItem.getInvoker()).getParent());

		switch (e.getActionCommand()) {
		case "new":
			window.getAppState().handleCreate();
			break;
		case "edit":
			window.setAppState(new EditState(window));
			window.getAppState().handleChange();
			break;
		case "next":
			window.getAppState().handleNext();
			break;
		case "previous":
			window.getAppState().handlePrev();
			break;
		case "last":
			window.getAppState().handleLast();
			break;
		case "delete":
			window.getAppState().handleDelete();
			break;
		case "first":
			window.getAppState().handleFirst();
			break;
		case "accept":
			window.getAppState().handleSubmit();
			break;
		case "cancel":
			window.getAppState().handleCancel();
			break;
			
		}
	}
}
