

package model;

import java.util.*;

/** 
 * Klasa DbConnection predstavlja model konekcije na bazu podataka.
 *  Ova klasa sadrzi kolekciju drugih objekata tipa {@code DbConnection}, 
 * cime omogucava odrzavanje odnosa izmedju razlicitih instanci (asocijacije).
 * 
 * @author G4
 *  */
public class DbConnection {
	
   /** 
    *Kolekcija povezanih {@code DbConnection} instanci.
    * Implementirana je kao {@link HashSet} kako bi se izbjegli duplikati.
    *  */
   public java.util.Collection<DbConnection> dbConnectionB;
   
   
   /**
    * Getter metoda za kolekciju {@code dbConnectionB}.
    * Ako kolekcija još nije inicijalizovana, kreira se nova {@link HashSet}.
    *
    * @return kolekcija objekata tipa {@code DbConnection} 
   */
   public java.util.Collection<DbConnection> getDbConnectionB() {
      if (dbConnectionB == null)
         dbConnectionB = new java.util.HashSet<DbConnection>();
      return dbConnectionB;
   }
   
   /** 
    * Vraća iterator za kolekciju {@code dbConnectionB}.
    * Ako kolekcija nije inicijalizovana, kreira se nova {@link HashSet}.
    *
    * @return iterator nad kolekcijom {@code DbConnection}
    *  */
   public java.util.Iterator getIteratorDbConnectionB() {
      if (dbConnectionB == null)
         dbConnectionB = new java.util.HashSet<DbConnection>();
      return dbConnectionB.iterator();
   }
   
   /** 
    * Postavlja novu kolekciju povezanih {@code DbConnection} instanci.
    * Stara kolekcija se brise i zamjenjuje novom.
    *
    * @param newDbConnectionB nova kolekcija {@code DbConnection} instanci
      */
   public void setDbConnectionB(java.util.Collection<DbConnection> newDbConnectionB) {
      removeAllDbConnectionB();
      for (java.util.Iterator iter = newDbConnectionB.iterator(); iter.hasNext();)
         addDbConnectionB((DbConnection)iter.next());
   }
   
   /**
    * Dodaje novu {@code DbConnection} instancu u kolekciju, ako vec ne postoji.
    * 
    * @param newDbConnection instanca {@code DbConnection} koja se dodaje
    *  */
   public void addDbConnectionB(DbConnection newDbConnection) {
      if (newDbConnection == null)
         return;
      if (this.dbConnectionB == null)
         this.dbConnectionB = new java.util.HashSet<DbConnection>();
      if (!this.dbConnectionB.contains(newDbConnection))
         this.dbConnectionB.add(newDbConnection);
   }
   
   /**
    * Uklanja datu {@code DbConnection} instancu iz kolekcije, ako postoji.
    *
    * @param oldDbConnection instanca {@code DbConnection} koja se uklanja 
    *  */
   public void removeDbConnectionB(DbConnection oldDbConnection) {
      if (oldDbConnection == null)
         return;
      if (this.dbConnectionB != null)
         if (this.dbConnectionB.contains(oldDbConnection))
            this.dbConnectionB.remove(oldDbConnection);
   }
   
   /** 
    * Uklanja sve {@code DbConnection} instance iz kolekcije.
    *  */
   public void removeAllDbConnectionB() {
      if (dbConnectionB != null)
         dbConnectionB.clear();
   }

}