package report;

import java.awt.Color;
import java.awt.GridLayout;
import java.io.File;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;

import javax.swing.GroupLayout.Alignment;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import org.jfree.ui.HorizontalAlignment;

import javax.swing.JFileChooser;


import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.view.JasperViewer;
import ar.com.fdvs.dj.domain.builders.DynamicReportBuilder;
import ar.com.fdvs.dj.domain.builders.FastReportBuilder;
import ar.com.fdvs.dj.domain.builders.StyleBuilder;
import ar.com.fdvs.dj.domain.constants.Border;
import ar.com.fdvs.dj.domain.constants.Font;
import ar.com.fdvs.dj.domain.AutoText;
import ar.com.fdvs.dj.domain.DynamicReport;
import ar.com.fdvs.dj.domain.ImageBanner;
import ar.com.fdvs.dj.domain.Style;
import ar.com.fdvs.dj.core.DynamicJasperHelper;
import ar.com.fdvs.dj.core.layout.ClassicLayoutManager;
import ar.com.fdvs.dj.core.layout.HorizontalBandAlignment;
import ar.com.fdvs.dj.domain.constants.HorizontalAlign;
import ar.com.fdvs.dj.domain.constants.Page;

public class DynamicReportGenerator {

    private final Connection connection;

    public DynamicReportGenerator(Connection connection) {
        this.connection = connection;
    }

    public void generateReport(String storedProcedure) {
        ResultSet resultSet = null;

        try {
            CallableStatement cs = connection.prepareCall(storedProcedure);
            resultSet = cs.executeQuery();

            if (resultSet == null) {
                JOptionPane.showMessageDialog(null, "Nema podataka za izveštaj.");
                return;
            }

            ResultSetMetaData meta = resultSet.getMetaData();
            int columnCount = meta.getColumnCount();

            JPanel panel = new JPanel(new GridLayout(columnCount, 1));
            JCheckBox[] checkBoxes = new JCheckBox[columnCount];

            for (int i = 1; i <= columnCount; i++) {
                String colName = meta.getColumnLabel(i);
                JCheckBox cb = new JCheckBox(colName, true); 
                checkBoxes[i - 1] = cb;
                panel.add(cb);
            }

            int option = JOptionPane.showConfirmDialog(null, panel, "Izaberite kolone za izveštaj", JOptionPane.OK_CANCEL_OPTION);
            if (option != JOptionPane.OK_OPTION) {
                return; 
            }

            FastReportBuilder drb = new FastReportBuilder();

            try {
                for (int i = 1; i <= columnCount; i++) {
                    if (checkBoxes[i - 1].isSelected()) {
                        String colName = meta.getColumnLabel(i);
                        drb.addColumn(colName, colName, String.class.getName(), 30);
                    }
                }
            } catch (ClassNotFoundException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Greška prilikom dodavanja kolona u izveštaj: " + e.getMessage());
            }

            Font titleFont = Font.TIMES_NEW_ROMAN_BIG_BOLD;
    		Style titleStyle = new StyleBuilder(false)
    			    .setFont(titleFont)
    			    .setHorizontalAlign(ar.com.fdvs.dj.domain.constants.HorizontalAlign.LEFT)
    			    .build();
            
            DynamicReportBuilder drpb = drb
            	    .setTitle("Napredni izvještaj")
            	    .setTitleStyle(titleStyle)
            	    .setOddRowBackgroundStyle(
            	        new StyleBuilder(false)
            	            .setBackgroundColor(new Color(173,216,230))
            	            .build()
            	    )
            	    .setPrintBackgroundOnOddRows(true)
            	    .setUseFullPageWidth(true)
            	    .setPageSizeAndOrientation(Page.Page_Legal_Landscape())
            	    .addFirstPageImageBanner("resources/logo.png", 100, 60, ImageBanner.Alignment.Right)
            	    .setHeaderVariablesHeight(50)
            	    .addAutoText("Datum i vrijeme: " + new java.text.SimpleDateFormat("dd.MM.yyyy. HH:mm")
            	            .format(new java.util.Date()),
            	        AutoText.POSITION_HEADER, AutoText.ALIGNMENT_LEFT, 200, new StyleBuilder(true).build()
            	    )
            	    .setFooterVariablesHeight(30)
            	    .addAutoText(AutoText.AUTOTEXT_PAGE_X_SLASH_Y,
            	        AutoText.POSITION_FOOTER, AutoText.ALIGNMENT_RIGHT, 30, 20
            	    );

            DynamicReport dr = drb.build();

            JRDataSource jrDataSource = new JRResultSetDataSource(resultSet);
            JasperPrint jasperPrint = DynamicJasperHelper.generateJasperPrint(dr, new ClassicLayoutManager(), jrDataSource);

            Object[] options = {"Pregled", "Sačuvaj PDF", "Otkaži"};
	        int choice = JOptionPane.showOptionDialog(null, "Izaberite opciju:", "Opcije izvještaja",
	            JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

	        if (choice == 0) {
	            JasperViewer.viewReport(jasperPrint, false);
	        } else if (choice == 1) {
	            JFileChooser fc = new JFileChooser();
	            fc.setSelectedFile(new File("izvjestaj.pdf"));
	            if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
	                JasperExportManager.exportReportToPdfFile(jasperPrint, fc.getSelectedFile().getAbsolutePath());
	                JOptionPane.showMessageDialog(null, "PDF sačuvan.");
	            }
	        }

        } catch (SQLException | JRException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Greška prilikom generisanja izveštaja:\n" + e.getMessage());
        }
    }
}