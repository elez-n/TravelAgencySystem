package view;

import javax.swing.*;
import javax.swing.tree.DefaultTreeCellRenderer;
import java.awt.*;
import model.TreeElement;

public class CustomTreeCellRenderer extends DefaultTreeCellRenderer {

    private static final long serialVersionUID = 1L;

    // Default ikonica za table čvorove
    private Icon defaultTableIcon = new ImageIcon(new ImageIcon("resources/table-list.png")
                                .getImage().getScaledInstance(25, 25, Image.SCALE_SMOOTH));

    @Override
    public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel,
                                                  boolean expanded, boolean leaf, int row, boolean hasFocus) {

        super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);

        // Ljepši font
        setFont(new Font("SansSerif", Font.PLAIN, 13));
        setForeground(Color.BLACK);

        Icon icon = null;

        // Root čvor
        if (tree.getModel().getRoot() == value) {
            icon = loadIcon("resources/root.png", 35, 35);
        }
        // Paket čvor
        else if (value instanceof TreeElement.Package) {
            TreeElement.Package pack = (TreeElement.Package) value;
            switch (pack.getName()) {
                case "Šifarnici":
                    icon = loadIcon("resources/key.png", 25, 25);
                    break;
                case "Administracija poslovnih sistema":
                    icon = loadIcon("resources/admin.png", 25, 22);
                    break;
                case "Administracija korisnika":
                    icon = loadIcon("resources/adminUsers.png", 25, 25);
                    break;
                case "Vozila":
                    icon = loadIcon("resources/vehicle.png", 25, 25);
                    break;
                case "Putovanja":
                    icon = loadIcon("resources/trip.png", 25, 25);
                    break;
                case "Klijenti":
                    icon = loadIcon("resources/clients.png", 25, 25);
                    break;
                case "Cjenovnik":
                    icon = loadIcon("resources/pricelist.png", 25, 25);
                    break;
                case "Izvještaji":
                    icon = loadIcon("resources/reports.png", 25, 25);
                    break;
                case "Evidencije aktivnosti":
                    icon = loadIcon("resources/log.png", 25, 25);
                    break;
                default:
                    icon = loadIcon("resources/package.png", 25, 25);
                    break;
            }
        }
        // Table čvorovi - default ikonica
        else if (value instanceof TreeElement.Table) {
            icon = defaultTableIcon;
        }

        if (icon != null) {
            setIcon(icon);
        }

        return this;
    }

    // Pomoćna metoda za učitavanje i skaliranje ikonice
    private Icon loadIcon(String path, int width, int height) {
        return new ImageIcon(new ImageIcon(path).getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH));
    }
}
